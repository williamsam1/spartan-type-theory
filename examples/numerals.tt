Definition Z := Zero : Nat.
Definition S := (fun (n : Nat) => Suc n)
       : Nat -> Nat.
Definition ( + ) := (fun (m n : Nat) => Plus m n)
       : Nat -> Nat -> Nat.
Definition nat_ind := (fun (P : Nat -> Type) (a : P Z)
       (f : Î  (n : Nat), P n -> P (Suc n)) (n : Nat) => NatInd P a f n).
Definition nat_rec := (fun (A : Type) (a : A) (f : A -> A)
       => nat_ind (fun (_ : Nat) => A) a (fun (_ : Nat) => f))
       : Î  (A : Type), A -> (A -> A) -> Nat -> A.
Definition nat_rec2 := (fun (A : Type) (a : A) (f : Nat -> A -> A)
       => nat_ind (fun (_ : Nat) => A) a (f))
       : Î  (A : Type), A -> (Nat -> A -> A) -> Nat -> A.
Definition ( * ) := nat_rec (Nat -> Nat)
    (fun (_ : Nat) => Z)
    (fun (f : Nat -> Nat) (n : Nat) => n + (f n))
       : Nat -> Nat -> Nat.
