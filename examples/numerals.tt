Definition suc := (fun (n : Nat) => Suc n)
	   : Nat -> Nat.

Definition ( + ) := (fun (m n : Nat) => Plus m n)
	   : Nat -> Nat -> Nat.

Definition natInd := (fun (P : Nat -> Type) (a : P Zero)
	   (f : forall (n : Nat), P n -> P (Suc n)) (n : Nat) => NatInd P a f n).

Definition natRec := (fun (A : Type) (a : A) (f : A -> A)
	   => natInd (fun (_ : Nat) => A) a (fun (_ : Nat) => f))
	   : forall (A : Type), A -> (A -> A) -> Nat -> A.

Definition ( * ) := natRec (Nat -> Nat)
	(fun (_ : Nat) => Zero)
	(fun (f : Nat -> Nat) (n : Nat) => n + (f n))
	   : Nat -> Nat -> Nat.

Definition one := suc 0.
Definition two := suc one.
Definition three := one + two.
Definition five := two + three.
Definition ten := five + five.
Definition hundred := ten * ten.
Definition thousand := hundred * ten.
